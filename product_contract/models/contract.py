import datetime
import logging

from dateutil.relativedelta import relativedelta

from odoo import models, fields, api, _


_logger = logging.getLogger(__name__)


class Contract(models.Model):
    _inherit = "contract.contract"
   
    sale_id = fields.Many2one(comodel_name='sale.order') # domain|context|ondelete="'set null', 'restrict', 'cascade'"|auto_join|delegate
    project_id = fields.Many2one(comodel_name="project.project")

    def get_first_invoice_date(self):
        """Return the date of the first invoice"""
        today = fields.Date.from_string(fields.Date.today())
        time = fields.Date.from_string(self.recurring_next_date)
        if self.recurring_rule_type == 'daily':
            deltaT = relativedelta(days = self.recurring_interval)
        elif self.recurring_rule_type == 'weekly':
            deltaT = relativedelta(weeks = self.recurring_interval)
        elif self.recurring_rule_type == 'monthly':
            deltaT = relativedelta(months = self.recurring_interval)
        elif self.recurring_rule_type == 'yearly':
            deltaT = relativedelta(years = self.recurring_interval)
        while time < today:
            time += deltaT
        
        #First invoice is generated by the product, so skip to the second invoice here
        time += deltaT
        
        return fields.Date.to_string(time)
